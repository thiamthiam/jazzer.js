name: "🔍 Tests"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  linting:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: install dependencies
        run: npm install
      - name: install dependencies with apt
        run: sudo apt-get install --yes clang-tidy
      - name: check formatting and linting
        run: npm run check

  unit_tests:
    name: unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-11]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
      - name: install dependencies (macos)
        if: contains(matrix.os, 'macos')
        run: |
          brew install cmake
          echo "TEST"
          echo "SDKROOT=$(xcrun --sdk macosx --show-sdk-path)" >> $GITHUB_ENV
          echo "LDFLAGS=$(llvm-config --ldflags)" >> $GITHUB_ENV
          echo "CFLAGS=$(llvm-config --cflags)" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
          echo "CPPFLAGS=$(llvm-config --cppflags)" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CXXFLAGS=$(llvm-config --cxxflags)" >> $GITHUB_ENV
      - name: install dependencies (windows)
        if: contains(matrix.os, 'windows')
        run: |
          choco install cmake python3
      - name: MSVC (windows)
        uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1
        if: contains(matrix.os, 'windows')
      - name: install dependencies
        run: npm install
      - name: build project
        run: npm run build
      - name: run all tests
        run: npm run test
